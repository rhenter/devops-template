---
  - name: Criar arquivos de variaveis de ambiente
    become: yes
    become_user: "{{ company_slug }}"
    template:
      src={{ app_name }}.env
      dest=/opt/{{ company_slug }}/releases/{{ release_name }}/.env

  - name: Link do .env para a release atual
    become: yes
    become_user: "{{ company_slug }}"
    file:
      src=/opt/{{ company_slug }}/releases/{{ release_name }}/.env
      dest=/opt/{{ company_slug }}/conf/{{ app_name }}/env
      state=link

  - name: Checar se o supervisor ja esta criado
    become: yes
    stat: path="/etc/supervisor/conf.d/{{ app_name }}-8001.conf"
    register: supervisor_path

  - include_role:
      name: supervisor
#    when:
#      - supervisor_path.stat.exists == False

  - name: Configurações nginx
    become: yes
    template:
      src=nginx
      dest=/etc/nginx/conf.d/{{ app_name }}.conf
    when:
      - not sub_app

  - name: Checar se o certificado ja foi criado
    become: yes
    stat: path="/etc/letsencrypt/live/{{ api_server_host }}"
    register: certificate_path

  - debug: var=certificate_path.stat.exists

  - name: Stop Web Server Service (nginx)
    become: yes
    service: name=nginx state=stopped
    when:
      - not sub_app
      - certificate_path.stat.exists == False

  - debug: msg="{{ api_server_host }}"

  # SSL: Configurar let's encrypt e obter certificado
  - include: roles/letsencrypt/tasks/main.yml
    vars:
      domain: "{{ app_server_host }}"
      registration_email: "{{ letsencrypt_registration_email }}"
    when:
      - not sub_app
      - certificate_path.stat.exists == False

  - name: Start Web Server Service (nginx)
    become: yes
    service: name=nginx state=start
    when:
      - not sub_app
      - certificate_path.stat.exists == False

  - name: Configurações nginx
    become: yes
    template:
      src={{ app_name }}.nginx
      dest=/etc/nginx/conf.d/{{ app_name }}.nginx
    when:
      - sub_app
